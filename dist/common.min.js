export const windowPromise=new Promise((t=>{window.addEventListener("load",(()=>t()))}));export function currentTheme(){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}export async function getJson(t){const s=`./dist/${t}.json`,i=await fetch(s);if(i.status>299)throw Error("Error in requesting file, status:"+i.status);const r=i.headers.get("Content-Type");if(!r||!r.startsWith("application/json"))throw Error("Invalid mime type for response, expected application/json, got "+r);return i.json()}export function parseScores(t,s){if(!t)throw Error("No scores provided");const i=decodeURIComponent(t).split(",").map((t=>parseFloat(t))),r=i.some((t=>t>100||t<0||isNaN(t)));if(i.length!==s||r)throw Error("Invalid scores");return i}export function parseUsers(t){return t.map((([t,s])=>({name:t,stats:s})))}function t(t){const s=new Image;return s.src="./assets/values/"+t,new Promise(((t,i)=>{s.addEventListener("load",(()=>t(s))),s.addEventListener("abort",i),s.addEventListener("error",i)}))}export class Canvas{t;params;constructor(t,s){t.width=s.width,t.height=s.height;const i=t.getContext("2d");if(!i)throw Error("Failed to get canvas context");this.t=i,this.params=s,this.t.fillStyle=this.params.bg,this.t.fillRect(0,0,this.params.width,this.params.height)}i(t){this.t.strokeStyle="#000",this.t.lineJoin="round",this.t.lineWidth=75,this.t.fillStyle="#222222",this.t.strokeRect(165,50+t,470,0)}o(t,s,i,r,e){const[o,n]=e?[1.5,.5]:[.5,1.5];this.t.fillStyle=r,this.t.beginPath(),this.t.arc(t,s,i,o*Math.PI,n*Math.PI),this.t.fill()}h(t,s,i){this.t.lineWidth=65;const r=220+120*i,[e,o]=t.color,[n,h]=s>98?[e,e]:s<2?[o,o]:[e,o];this.o(166,r,32,n,!1),this.o(634,r,32,h,!0);const a=s>98||s<2?6:0,c=4.82*(Math.max(Math.min(s,98),2)-2);this.t.fillStyle=n,this.t.fillRect(166,r-32,c+a,64),this.t.fillStyle=h,this.t.fillRect(172+c,r-32,464-c,64)}l(t,s,i){this.t.font=`32px '${this.params.font}', sans-serif`;const r=120*i+232.5;if(null==s||s>100||s<0)throw Error("Invalid score: "+s);const e=t.white,o=[2&e,1&e];s>20&&(this.t.fillStyle=o[0]?"#FFF":"#000",this.t.textAlign="left",this.t.fillText(s.toFixed(1)+"%",150,r)),s<80&&(this.t.fillStyle=o[1]?"#FFF":"#000",this.t.textAlign="right",this.t.fillText((100-s).toFixed(1)+"%",650,r)),this.t.fillStyle=this.params.fg,this.t.textAlign="center",this.t.font=`bold 30px '${this.params.font}', sans-serif`;const n=(h=t.name).charAt(0).toUpperCase()+h.slice(1);var h;const a=Canvas.findTier(s,t.tiers),c=`${n} Axis: ${a}`;return this.t.fillText(c,400,170+120*i,550),a}clearFields(){this.t.fillStyle=this.params.bg,this.t.fillRect(126,130,550,1e3),this.t.fillRect(0,0,800,150)}async drawValue(s,i,r,e=!0){const o=170+120*r;this.i(o),this.h(s,i,r);const n=this.l(s,i,r);if(e){const{icons:i}=s,[r,e]=await Promise.all(i.map(t));this.t.drawImage(r,20,o,100,100),this.t.drawImage(e,680,o,100,100)}return n}drawHeader(t){this.t.fillStyle=this.params.fg,this.t.font=`700 50px '${this.params.font}', sans-serif`,this.t.textAlign="left",this.t.fillText("PCBvalues",20,90),this.t.font=`30px '${this.params.font}', sans-serif`;const s=t.gallery?t.user:"Closest Match: "+t.user;this.t.fillText(s,20,130,480),this.t.textAlign="right",this.t.font=`300 25px '${this.params.font}', sans-serif`,this.t.fillText("pcbvalues.github.io",780,40),this.t.fillText(t.version,780,70),this.t.fillText(t.edition,780,100);const i=(new Date).toLocaleDateString("en-GB"),r=`${t.basetext} on ${i}`;this.t.fillText(r,780,130)}static findTier(t,s){return s[Math.floor((100-t)/100*s.length)]??s.at(-1)}static download(t){const s=document.createElement("a");s.href=t.toDataURL("image/png"),s.download="PCBValues.png",s.click(),s.remove()}}